enum Permission {
ADMIN
USER
MODERATOR
PERMISSIONUPDATE
}




type User {
  id: ID! @id @unique
  name: String!
  email: String! @unique
  display: String! @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  image: String
  location: String
  about: String
  industry: String
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission]
  myQuestions: [Question!]! @relation(link: INLINE)
  myAnswers: [Answer!]! @relation(link: INLINE)
  myBookMarks: [BookMark!]
  businessIdeas: [BusinessIdea!]! @relation(link: INLINE)
  tags: [Tag!]! @relation(link: INLINE)
  myNotifications: [Notification!]! @relation(link: INLINE)
}

type Question {
id: ID! @id @unique
tags: [Tag!]! @relation(link: INLINE)
title: String!
description: String!
createdAt: DateTime! @createdAt
updatedAt: DateTime! @updatedAt
askedBy: [User!]!
approval: Boolean
answers: [Answer!]! @relation(link: INLINE)
questionVote: [QuestionVote]
bookMark: [BookMark]
searchTermFoundIn: String
notifyByEmail: Boolean
}

type Tag {
  id: ID! @id @unique
  name: String! @unique
}

type Answer {
  id: ID! @id @unique
  body: String!
  answeredBy: User!
  answeredTo: [Question!]
  approval: Boolean
  selected: Boolean
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  answerVote: [AnswerVote]
}

type BookMark {
id: ID! @id @unique
questions: [Question!]! @relation(link: INLINE)
markedBy: User! @relation(link: INLINE)
}

type QuestionView {
  id: ID! @id @unique
  viewedBy: User! @relation(link: INLINE)
  viewedQuestion: Question! @relation(link: INLINE)
}

type QuestionVote {
  id: ID! @id @unique
  votedBy: User! @relation(link: INLINE)
  votedQuestion: Question! @relation(link: INLINE)
  vote: String
}

type AnswerVote {
  id: ID! @id @unique
  votedBy: User! @relation(link: INLINE)
  votedAnswer: Answer! @relation(link: INLINE)
  vote: String
}

type BusinessIdea {
id: ID! @id @unique
createdBy: User!
createdAt: DateTime! @createdAt
updatedAt: DateTime! @updatedAt
idea: String!
problem: String
solution: String
customer: String
value: String
}

type Notification {
  id: ID! @id @unique
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  forUser: User!
  answer: Answer! @relation(link: INLINE)
  wasSeen: Boolean
  wasClicked: Boolean
}